{"version":3,"file":"static/js/883.07b7b1bc.chunk.js","mappings":"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","sources":["views/home/blocks/top_section/logo.js","views/home/blocks/top_section/user_settings.js","views/home/blocks/top_section.js","views/home/blocks/middle_section/conversations/top_conversations.js","views/home/blocks/middle_section/conversations/middle_conversations.js","views/home/blocks/middle_section/conversations/add_modal.js","views/home/blocks/middle_section/conversations/floating_button.js","views/home/blocks/middle_section/conversations.js","views/home/blocks/middle_section/conversation/chat_title.js","views/home/blocks/middle_section/conversation/chat/message.js","views/home/blocks/middle_section/conversation/chat.js","views/home/blocks/middle_section/conversation/chat_footer/default_mode.js","views/home/blocks/middle_section/conversation/chat_footer/reload_mode.js","views/home/blocks/middle_section/conversation/chat_footer/recording_mode.js","views/home/blocks/middle_section/conversation/chat_footer.js","views/home/blocks/middle_section/conversation.js","views/home/blocks/middle_section/conversation_info.js","views/home/blocks/middle_section.js","views/home/index.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <img src=\"assets/logo.png\" alt=\"logo\" className='w-1/3'/>\r\n  )\r\n};\r\n\r\nexport default Logo","import axios from 'axios';\r\nimport { useContext, useRef, useState } from 'react'\r\nimport { Animate, Icon } from 'components/lib';\r\nimport { ViewContext } from 'contexts/view';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserSettings = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [isSettingOpen, setIsSettingOpen] = useState(false);\r\n  // const [isAvatarOpen, setIsAvatarOpen] = useState(false);\r\n\r\n  // const handleFileChange = async(e) => {\r\n  //   const selectedFile = e.target.files[0];\r\n  //   if (selectedFile) {\r\n  //     setAvatar(selectedFile);\r\n  //   }\r\n  //   await handleUploadAvatar();\r\n  // };\r\n\r\n  // const handleUploadAvatar = async () => {\r\n  //   if (avatar === null) {\r\n  //     context.notification.show(\"Загрузите аватар\", \"error\")\r\n  //     return;\r\n  //   }\r\n\r\n  //   await axios({\r\n  //     method: \"POST\",\r\n  //     url: `/v1/upload_avatar`,\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //       'Authorization': `Bearer ${auth.user.token}`\r\n  //     },\r\n  //     data: {\r\n  //       avatar: avatar\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       context.notification.show(err.response.data.detail, \"error\")\r\n  //     })\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-3 cursor-pointer ml-auto flex-shrink-0\">\r\n        <div onClick={() => context.colorMode.setTheme(context.colorMode.theme === 0 ? 1 : 0)} className=\"w-[22px] h-[22px] text-[var(--settings-icon-color)] flex-shrink-0 hover:text-gray-400\">\r\n          {context.colorMode.theme === 0 ? (\r\n            <svg className=\"w-full fill-transparent transition-all duration-500\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <path d=\"M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z\" />\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"w-full fill-transparent transition-all duration-500\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"5\" />\r\n              <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\r\n              <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\r\n              <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\r\n              <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\r\n              <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\r\n              <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\r\n              <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\r\n              <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\r\n            </svg>\r\n          )}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            // setIsAvatarOpen(false);\r\n            setIsSettingOpen(!isSettingOpen)\r\n          }}\r\n          className=\"text-[var(--settings-icon-color)] w-[22px] h-[22px] flex-shrink-0 hover:text-gray-400\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n            <path d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 010 2.83 2 2 0 01-2.83 0l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-2 2 2 2 0 01-2-2v-.09A1.65 1.65 0 009 19.4a1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83 0 2 2 0 010-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 01-2-2 2 2 0 012-2h.09A1.65 1.65 0 004.6 9a1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 010-2.83 2 2 0 012.83 0l.06.06a1.65 1.65 0 001.82.33H9a1.65 1.65 0 001-1.51V3a2 2 0 012-2 2 2 0 012 2v.09a1.65 1.65 0 001 1.51 1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 0 2 2 0 010 2.83l-.06.06a1.65 1.65 0 00-.33 1.82V9a1.65 1.65 0 001.51 1H21a2 2 0 012 2 2 2 0 01-2 2h-.09a1.65 1.65 0 00-1.51 1z\" />\r\n          </svg>\r\n        </div>\r\n        <img\r\n          // onClick={() => {\r\n          //   setIsSettingOpen(false);\r\n          //   setIsAvatarOpen(!isAvatarOpen);\r\n          // }}\r\n          className=\"w-[40px] h-[40px] rounded-full border border-slate-300\"\r\n          src=\"assets/avatar-default.svg\" alt=\"account-profile\"\r\n        />\r\n      </div>\r\n      {isSettingOpen && (\r\n        <div className='absolute top-16 right-5'>\r\n          <Animate type=\"slidedown\">\r\n            {auth.user.role.id === \"7\" && (\r\n              <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n                <div\r\n                  onClick={() => navigate('/admin')}\r\n                  className='cursor-pointer flex items-center justify-between hover:bg-neutral-200 px-4 py-2'\r\n                >\r\n                  <p className='font-semibold text-[14px] '>Админка</p>\r\n                  <Icon image=\"command\" color=\"green\"/>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n              <div\r\n                onClick={() => auth.auth.signout()}\r\n                className='cursor-pointer flex items-center justify-between hover:bg-gray-300 px-4 py-2'\r\n              >\r\n                <p className='font-semibold text-[14px] '>Выход</p>\r\n                <Icon image=\"log-out\" color=\"red\"/>\r\n              </div>\r\n            </div>\r\n          </Animate>\r\n        </div>\r\n      )}\r\n      {/* {isAvatarOpen && (\r\n        <div className='absolute top-16 right-5'>\r\n          <Animate type=\"slidedown\">\r\n            {auth.user.role === 'admin' && (\r\n              <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n                <div\r\n                  onClick={() => navigate('/admin')}\r\n                  className='cursor-pointer flex items-center justify-between hover:bg-neutral-200 px-4 py-2'\r\n                >\r\n                  <p className='font-semibold text-[14px]'>Админка</p>\r\n                  <Icon image=\"command\" color=\"green\"/>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n              <div\r\n                onClick={() => fileInputRef.current.click()}\r\n                className='cursor-pointer flex items-center justify-between hover:bg-gray-300 px-4 py-2'\r\n              >\r\n                <p className='font-semibold text-[14px]'>Аватар</p>\r\n                <Icon image=\"image\" color=\"black\"/>\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n              />\r\n            </div>\r\n          </Animate>\r\n        </div>\r\n      )} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSettings","import { SearchInput } from 'components/lib';\r\nimport Logo from './top_section/logo';\r\nimport UserSettings from './top_section/user_settings';\r\n\r\nconst TopSection = ({ search, setSearch, setCurrentPage }) => {\r\n\r\n  const handleSearch = (text) => {\r\n    setCurrentPage(1);\r\n    setSearch(text);\r\n  }\r\n\r\n  return (\r\n    <section className='h-[12vh] border-b border-slate-300 flex sm:flex-row'>\r\n      <div className={`w-[15%] sm:w-1/4 overflow-hidden flex items-center px-4 border-r`}>\r\n        <Logo/>\r\n      </div>\r\n      <div className='w-[50%] sm:w-1/2 overflow-hidden flex items-center'>\r\n        <SearchInput\r\n          value={search}\r\n          onChange={(text) => handleSearch(text)}\r\n        />\r\n      </div>\r\n      <div className='w-[35%] sm:w-1/4 overflow-hidden flex items-center justify-end px-4 border-l'>\r\n        <UserSettings/>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TopSection","import { ViewContext } from 'contexts/view'\r\nimport React, { useContext } from 'react'\r\n\r\nconst TopConversations = ({ type, setType, setCurrentPage, setConversations }) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleChangeType = (t) => {\r\n    setCurrentPage(1);\r\n    if(type !== t) {\r\n      setConversations([]);\r\n    }\r\n    setType(t)\r\n  };\r\n\r\n  return (\r\n    <div className='w-full min-h-[6vh] flex items-center select-none border-b border-slate-300'>\r\n      <div\r\n        onClick={() => handleChangeType(0)}\r\n        className={`\r\n          h-full w-1/2 flex items-center\r\n          justify-center cursor-pointer border-r border-slate-300\r\n          ${type === 0 && context.colorMode.theme === 0 && 'bg-gray-300'}\r\n          ${type === 0 && context.colorMode.theme === 1 && 'bg-[#404d69]'}\r\n        `}\r\n      >\r\n        <p\r\n          className={`\r\n            font-semibold text-[13px]\r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        >\r\n          Все\r\n        </p>\r\n      </div>\r\n      <div\r\n        onClick={() => handleChangeType(1)}\r\n        className={`\r\n          h-full w-1/2 flex items-center\r\n          justify-center cursor-pointer\r\n          ${type === 1 && context.colorMode.theme === 0 && 'bg-gray-300'}\r\n          ${type === 1 && context.colorMode.theme === 1 && 'bg-[#404d69]'}\r\n        `}\r\n      >\r\n        <p\r\n          className={`\r\n            font-semibold text-[13px]\r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        >\r\n          Избранные\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopConversations","import { Icon } from 'components/lib';\r\nimport { useSocketContext } from 'contexts/socket'\r\nimport { ViewContext } from 'contexts/view'\r\nimport React, { useContext, useEffect, useRef } from 'react'\r\n\r\nconst MiddleConversations = (props) => {\r\n  const {\r\n    conversations,\r\n    activeCustomer, handleChatClick,\r\n    setConversations, setCurrentPage,\r\n    currentPage\r\n  } = props;\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const context = useContext(ViewContext);\r\n  const { raiseConversation } = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (containerRef.current) {\r\n        const { scrollHeight, scrollTop, clientHeight } = containerRef.current;\r\n        if (scrollTop + clientHeight + 1 >= scrollHeight) {\r\n          setCurrentPage(prev => prev + 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      container.addEventListener('scroll', handleScroll);\r\n    }\r\n\r\n    return () => {\r\n      if (container) {\r\n        container.removeEventListener('scroll', handleScroll);\r\n      }\r\n    };\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (raiseConversation) {\r\n      handleRaiseConversation();\r\n    }\r\n  }, [raiseConversation]);\r\n\r\n  const handleRaiseConversation = () => {\r\n    setConversations((prevConversations) => {\r\n      const existIndex = prevConversations.findIndex((c) => c.customer_id === raiseConversation.customer_id);\r\n\r\n      if (existIndex !== -1) {\r\n        const existingConversation = prevConversations[existIndex];\r\n        existingConversation.counter = (existingConversation.counter || 0) + (raiseConversation.counter || 0);\r\n        prevConversations.splice(existIndex, 1);\r\n\r\n        return [existingConversation, ...prevConversations];\r\n      } else {\r\n        return [{ ...raiseConversation, counter: raiseConversation.counter || 0 }, ...prevConversations];\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} className='flex-grow overflow-y-auto'>\r\n      {conversations.length > 0 && conversations.map((conversation, i) => (\r\n        <div\r\n          key={conversation.id}\r\n          onClick={() => handleChatClick(conversation)}\r\n          className={`relative select-none\r\n            cursor-pointer flex items-center gap-2 px-5 py-3\r\n            ${context.colorMode.theme === 0 && 'hover:bg-gray-300'}\r\n            ${context.colorMode.theme === 1 && 'hover:bg-[#2d3f65]'}\r\n            ${activeCustomer.id === conversation.id && context.colorMode.theme === 0 && 'bg-gray-300'}\r\n            ${activeCustomer.id === conversation.id && context.colorMode.theme === 1 && 'bg-[#2d3f65]'}\r\n          `}\r\n        >\r\n          {activeCustomer.id === conversation.id &&\r\n            <div className='absolute left-0 h-full w-1 bg-[#0086FF]'/>\r\n          }\r\n          <div className=\"relative inline-block\">\r\n            <img\r\n              src={conversation.avatar ?? 'assets/avatar-default.svg'}\r\n              className='border border-slate-300 rounded-full w-10 h-10'\r\n            />\r\n          </div>\r\n\r\n          <div className='flex flex-col'>\r\n            <p className={`font-semibold text-[15px] ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}`}>\r\n              {conversation.name}\r\n            </p>\r\n            <div className='flex items-center overflow-hidden gap-1'>\r\n              <p className=\"whitespace-nowrap overflow-hidden overflow-ellipsis text-[var(--msg-message)] text-[13px]\">\r\n                {conversation.order_id}\r\n              </p>\r\n              {/* <p className=\"whitespace-nowrap overflow-hidden overflow-ellipsis text-[var(--msg-message)] text-[13px]\">\r\n                {conversation?.lastMessage.length > 35 ? `${conversation?.lastMessage.slice(0, 35)}...` : conversation?.lastMessage}\r\n              </p> */}\r\n              <p className=\"text-[14px] text-[var(--msg-date)] ml-3 relative\">\r\n                <span className=\"absolute top-0 left-[-10px]\">&#8226;</span>\r\n                {conversation.lastMessageTime}\r\n              </p>\r\n            </div>\r\n            {conversation?.counter && (\r\n              <div className='absolute top-2 right-2 overflow-hidden'>\r\n                <p className='flex items-center justify-center text-[12px] w-5 h-5 bg-red-500 rounded-full text-white'>{conversation?.counter > 100 ? \"99+\" : conversation?.counter}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiddleConversations","import axios from 'axios';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { ViewContext } from 'contexts/view';\r\nimport { useState, useEffect, useContext } from 'react'\r\n\r\nconst AddModal = ({ setConversations }) => {\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [leadvertex_id, setLeadVertexId] = useState(null);\r\n\r\n  const handleSendUser = async () => {\r\n    if(!message || !leadvertex_id) {\r\n      context.notification.show(\"Заполните все поля\", \"error\");\r\n      return;\r\n    };\r\n\r\n    await axios({\r\n      method: 'POST',\r\n      url: `/messages/leadvertex`,\r\n      data: {\r\n        message: message,\r\n        leadvertex_id: leadvertex_id,\r\n      }\r\n    })\r\n      .then((res) => {\r\n        setConversations((prev) => {\r\n          return [res.data.customer, ...prev]\r\n        })\r\n        context.modal.hide();\r\n        context.notification.show(\"Успешно!\", \"success\");\r\n      })\r\n      .catch((err) => context.notification.show(err.response.data.detail, \"error\"))\r\n  }\r\n\r\n  return (\r\n    <div className='flex flex-col gap-6 h-[25vh]'>\r\n      <div className='flex items-center gap-3'>\r\n        <p className='w-32 font-semibold text-lg'>LeadVertext_Id:</p>\r\n        <input\r\n          type=\"text\"\r\n          value={leadvertex_id}\r\n          onChange={(e) => setLeadVertexId(e.target.value)}\r\n          placeholder=\"Введите...\"\r\n          className={`pl-[16px] outline-none h-8 w-full\r\n            bg-transparent text-body-color bg-no-repeat\r\n            bg-[length:16px] bg-[25px_48%] font-body-font\r\n            font-semibold text-[15px] placeholder-input-chat-color\r\n            border border-slate-300 rounded-lg\r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        />\r\n      </div>\r\n      <div className='flex items-center gap-3'>\r\n        <p className='w-32 font-semibold text-lg'>Сообщение:</p>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Введите...\"\r\n          className={`pl-[16px] outline-none h-8 w-full\r\n            bg-transparent text-body-color bg-no-repeat\r\n            bg-[length:16px] bg-[25px_48%] font-body-font\r\n            font-semibold text-[15px] placeholder-input-chat-color\r\n            border border-slate-300 rounded-lg\r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        />\r\n      </div>\r\n      <button\r\n        onClick={handleSendUser}\r\n        className={`ml-auto max-w-[20vh] mt-4 bg-white p-2\r\n          rounded-lg hover:bg-blue-100 border border-slate-300\r\n        `}\r\n      >\r\n        Отправить\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddModal","import { Icon } from 'components/lib'\r\nimport { ViewContext } from 'contexts/view';\r\nimport React, { useContext } from 'react'\r\nimport AddModal from './add_modal';\r\n\r\nconst FloatingButton = ({ setConversations }) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleAddConversation = () => {\r\n    context.modal.show({\r\n      title: 'Написать первым',\r\n      children: <AddModal setConversations={setConversations}/>\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div \r\n      onClick={() => handleAddConversation()}\r\n      className='fixed bottom-3 left-3 bg-[#0086FF] w-8 h-8 rounded-full flex items-center justify-center cursor-pointer shadow-xl'\r\n    >\r\n      <Icon image=\"plus\" color=\"white\" size={28}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FloatingButton","import TopConversations from './conversations/top_conversations';\r\nimport MiddleConversations from './conversations/middle_conversations';\r\nimport FloatingButton from './conversations/floating_button';\r\nimport { useSocketContext } from 'contexts/socket';\r\n\r\nconst Conversations = (props) => {\r\n  const {\r\n    activeCustomer, setActiveCustomer,\r\n    type, setType, conversations, setConversations,\r\n    fetchConversation, setCurrentPage,\r\n    currentPage, setFile\r\n  } = props;\r\n\r\n  const { raisedConversations, setRaisedConversations } = useSocketContext();\r\n\r\n  const handleChatClick = (customer) => {\r\n    // if (raisedConversations && raisedConversations.length > 0) {\r\n    //   setConversations((prevConversations) => {\r\n    //     return prevConversations.map((c) => {\r\n    //       const exist = raisedConversations.find((raisedConv) => raisedConv.customer_id === c.customer_id);\r\n    //       if (exist && c.customer_id === conversation.customer_id) {\r\n    //         return { ...c, counter: null };\r\n    //       }\r\n    //       return c;\r\n    //     });\r\n    //   });\r\n\r\n    //   const newRaisedConversations = raisedConversations.filter(\r\n    //     (raisedConv) => raisedConv.customer_id !== conversation.customer_id\r\n    //   );\r\n    //   setRaisedConversations(newRaisedConversations);\r\n    // }\r\n\r\n    setActiveCustomer(customer);\r\n    fetchConversation(customer.id);\r\n    setFile(null);\r\n  };\r\n\r\n  return (\r\n    <div className='flex flex-col h-full w-full sm:w-1/4 overflow-y-auto border-r border-slate-300 relative'>\r\n      <TopConversations\r\n        type={type}\r\n        setType={setType}\r\n        setCurrentPage={setCurrentPage}\r\n        setConversations={setConversations}\r\n      />\r\n      <MiddleConversations\r\n        conversations={conversations}\r\n        activeCustomer={activeCustomer}\r\n        handleChatClick={handleChatClick}\r\n        setConversations={setConversations}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <FloatingButton\r\n        setConversations={setConversations}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversations;\r\n","import axios from 'axios';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { ViewContext } from 'contexts/view'\r\nimport React, { useContext } from 'react'\r\n\r\nconst ChatTitle = ({\r\n  fetchConversations, isFavorite, title,\r\n  activeCustomer, setConversations,\r\n  setCurrentPage, setActiveCustomer\r\n}) => {\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleAddFavorite = async () => {\r\n    await axios({\r\n      method: 'PATCH',\r\n      url: `/customers/${activeCustomer.id}`,\r\n    })\r\n      .then(() => {\r\n        setConversations([]);\r\n        setCurrentPage(1);\r\n        fetchConversations()\r\n        setActiveCustomer({\r\n          id: null,\r\n          customer_good: \"\",\r\n          customer_phone: \"\",\r\n          leadvertex_id: null\r\n        });\r\n      })\r\n      .catch((err) => context.notification.show(err.response.data.detail, \"error\"))\r\n  };\r\n\r\n  return (\r\n    <div className='flex items-center justify-between px-6 py-6 border-b border-slate-300'>\r\n      <div className={`text-[18px] font-semibold ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}`}>{title}</div>\r\n      <div onClick={() => handleAddFavorite()}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill={`${isFavorite ? 'red' : 'none'}`}\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\r\n        >\r\n          <path\r\n            d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatTitle","import { Fragment } from 'react';\nimport { ChatAudio } from 'components/lib';\n\nconst Message = (props) => {\n  const { message, openGoogleMaps } = props;\n\n  return (\n    <div\n      className={`\n        relative flex items-end gap-2\n        ${!message.incoming ? 'flex-row-reverse' : 'flex-row'}\n      `}\n    >\n      <img src={message.avatar ?? 'assets/avatar-default.svg'} alt='avatar' className='h-10 w-10 rounded-full border border-slate-300'/>\n      <div\n        className={`\n          inline-block min-w-[10px] max-w-[50%]\n          ${message.incoming && !message.attachment_url && 'rounded-r-xl rounded-tl-xl bg-gray-200 text-black px-3 py-3'}\n          ${!message.incoming && !message.attachment_url && 'rounded-l-xl rounded-tr-xl bg-[#0086FF] text-white px-3 py-3'}\n        `}\n      >\n        {message?.quoted_message && (\n          <p className='bg-slate-100 px-2 py-1 border-b border-black'>{message?.quoted_message}</p>\n        )}\n        <p>{message?.text}</p>\n        {message?.attachments?.map((attachment) => (\n          <Fragment key={attachment.id}>\n            {attachment?.contentType?.includes('image') && <img\n              src={attachment.link}\n              alt={attachment.link}\n              className='w-fit min-h-16 max-h-40 rounded-lg'\n            />}\n\n            {attachment.contentType === 'application/pdf' && <div\n              className=\"flex items-center gap-2\"\n            >\n              <img className=\"w-8 h-8\" src=\"assets/doc.png\"/>\n              <a\n                href={attachment.link}\n                alt={message.url}\n                target=\"_blank\"\n                className='hover:text-blue-500'\n              >\n                Скачать\n              </a>\n            </div>}\n\n            {attachment?.contentType?.includes('audio') && <ChatAudio\n              src={attachment.link}\n            />}\n\n            {!attachment.contentType && <img\n              src={`data:image/jpeg;base64,${attachment.thumb}`}\n              alt={attachment.link}\n              onClick={() => openGoogleMaps(attachment.lat, attachment.lon)}\n              className='rounded-lg cursor-pointer'\n            />}\n\n            {attachment?.contentType?.includes('video') && <video\n              src={attachment.link}\n              alt={attachment.link}\n              className='rounded-lg cursor-pointer'\n              controls\n            />}\n          </Fragment>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Message;\n","import { useSocketContext } from \"contexts/socket\";\r\nimport { Fragment, useEffect, useRef } from \"react\";\r\nimport Message from \"./chat/message\";\r\n\r\nconst Chat = ({ conversation, setConversation, activeCustomer }) => {\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const { newMessage } = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [conversation]);\r\n\r\n  useEffect(() => {\r\n    if (newMessage) {\r\n      handleUpdateNewMessage(newMessage);\r\n    }\r\n  }, [newMessage]);\r\n\r\n  const handleUpdateNewMessage = (newMessage) => {\r\n    if(activeCustomer.customer_phone === newMessage.chat_phone) {\r\n      const newConversation = [...conversation];\r\n      newConversation.push(newMessage);\r\n      setConversation(newConversation);\r\n    };\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const openGoogleMaps = (lat, lon) => {\r\n    const url = `https://www.google.com/maps?q=${lat},${lon}&z=15&output=embed`;\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div className='w-full h-full flex flex-col gap-3 overflow-y-auto px-6 py-6'>\r\n      {conversation?.length > 0 && conversation?.map((message) => (\r\n        <Fragment key={message.id}>\r\n          <Message\r\n            message={message}\r\n            openGoogleMaps={openGoogleMaps}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat;\r\n","import { useContext, useState } from 'react'\nimport { ViewContext } from 'contexts/view';\nimport Picker from '@emoji-mart/react';\nimport data from '@emoji-mart/data';\n\nconst DefaultMode = (props) => {\n  const {\n    fileInputRef, handleFileChange, file, setFile, message, setMessage,\n    handleSendMessage, startRecording, isMessageSending\n  } = props;\n\n  const context = useContext(ViewContext);\n  const [isPickedVisible, setIsPickedVisible] = useState(false);\n\n  return (\n    <>\n      <div className='w-[5%] flex items-center justify-center pl-3 gap-2 py-6'>\n        <div onClick={() => fileInputRef.current.click()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\n          >\n            <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48\" />\n          </svg>\n        </div>\n        {/* <div onClick={() => fileInputRef.current.click()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"w-7 h-7 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\n          >\n            <path d=\"M12 2a6 6 0 00-6 6c0 3.9 6 12 6 12s6-8.1 6-12a6 6 0 00-6-6z\" />\n            <circle cx=\"12\" cy=\"8\" r=\"3\" />\n          </svg>\n        </div> */}\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          style={{ display: 'none' }}\n          onChange={handleFileChange}\n        />\n      </div>\n      <div className='w-[85%] relative flex items-center h-full'>\n        {file &&\n          <div className=\"absolute top-0\">\n            <div className=\"flex items-center gap-1\">\n              <p className={`\n                text-[10px]\n                ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\n              `}>\n                {file.name}\n              </p>\n              <svg\n                viewBox=\"0 0 1024 1024\"\n                fill=\"currentColor\"\n                height=\"0.7em\"\n                width=\"0.7em\"\n                cursor=\"pointer\"\n                onClick={() => setFile(null)}\n              >\n                <path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" />\n              </svg>\n            </div>\n          </div>\n        }\n\n        <input\n          type=\"text\"\n          className='w-full outline-none h-10 rounded-md pl-3 border border-slate-300'\n          placeholder=\"Введите...\"\n          value={message}\n          onChange={(e) => {\n            e.preventDefault();\n            setMessage(e.target.value)\n          }}\n          onKeyDown={(e) => {\n            if (!isMessageSending && e.key === 'Enter') {\n              handleSendMessage();\n            }\n          }}\n          disabled={!!file}\n        />\n        <div className='absolute right-0 pr-3'>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\n            onClick={() => {\n              if(!isMessageSending) {\n                handleSendMessage()\n              };\n            }}\n          >\n            <path d=\"M22 2L11 13\" />\n            <path d=\"M22 2L15 22 11 13 2 9l20-7z\" />\n          </svg>\n        </div>\n      </div>\n      <div className='w-[10%] flex items-center gap-2 py-6'>\n        <div onClick={() => startRecording()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\n          >\n            <path d=\"M12 1a3 3 0 0 1 3 3v10a3 3 0 0 1-6 0V4a3 3 0 0 1 3-3z\"/>\n            <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"/>\n            <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"/>\n            <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"/>\n          </svg>\n        </div>\n        <div onClick={() => setIsPickedVisible(!isPickedVisible)} >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\n          >\n            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n            <path d=\"M8 14s1.5 2 4 2 4-2 4-2M9 9h.01M15 9h.01\" />\n          </svg>\n        </div>\n      </div>\n      {isPickedVisible && (\n        <div className='absolute bottom-0 sm:bottom-20 sm:right-20'>\n          <Picker\n            data={data}\n            previewPosition=\"none\"\n            onEmojiSelect={(e) => {\n              setMessage(message + e.native);\n              setIsPickedVisible(!isPickedVisible);\n            }}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default DefaultMode","import { useContext } from 'react'\nimport { ViewContext } from 'contexts/view';\n\nconst ReloadMode = (props) => {\n  const { handleDeleteRecord, audio, handleReloadRecord, handleSendMessage, isMessageSending } = props;\n  const context = useContext(ViewContext);\n\n  return (\n    <div className='flex items-center justify-center gap-3 w-full h-full'>\n      <div className='w-[5%] flex items-center justify-center pl-3 py-6'>\n        <div onClick={() => handleDeleteRecord()} className='hover:bg-gray-200 rounded-md'>\n          <svg\n            fill=\"red\"\n            viewBox=\"0 0 16 16\"\n            height=\"1.2em\"\n            width=\"1.2em\"\n            cursor={\"pointer\"}\n          >\n            <path d=\"M6.5 1h3a.5.5 0 01.5.5v1H6v-1a.5.5 0 01.5-.5zM11 2.5v-1A1.5 1.5 0 009.5 0h-3A1.5 1.5 0 005 1.5v1H2.506a.58.58 0 00-.01 0H1.5a.5.5 0 000 1h.538l.853 10.66A2 2 0 004.885 16h6.23a2 2 0 001.994-1.84l.853-10.66h.538a.5.5 0 000-1h-.995a.59.59 0 00-.01 0H11zm1.958 1l-.846 10.58a1 1 0 01-.997.92h-6.23a1 1 0 01-.997-.92L3.042 3.5h9.916zm-7.487 1a.5.5 0 01.528.47l.5 8.5a.5.5 0 01-.998.06L5 5.03a.5.5 0 01.47-.53zm5.058 0a.5.5 0 01.47.53l-.5 8.5a.5.5 0 11-.998-.06l.5-8.5a.5.5 0 01.528-.47zM8 4.5a.5.5 0 01.5.5v8.5a.5.5 0 01-1 0V5a.5.5 0 01.5-.5z\" />\n          </svg>\n        </div>\n      </div>\n      <div className='w-[85%] flex items-center h-full'>\n        {audio && <audio controls src={audio} className='w-full'/>}\n      </div>\n      <div className='w-[10%] flex items-center gap-2 py-6'>\n        <div\n          onClick={() => handleReloadRecord()}\n          className='w-5 h-5 cursor-pointer hover:bg-gray-200 hover:rounded-md hover:font-bold'\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={context.colorMode.theme === 0 ? \"black\" : \"white\"}\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <path d=\"M12 1a3 3 0 0 1 3 3v10a3 3 0 0 1-6 0V4a3 3 0 0 1 3-3z\"/>\n            <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"/>\n            <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"/>\n            <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"/>\n          </svg>\n        </div>\n        <div\n          onClick={() => {\n            if(!isMessageSending) {\n              handleSendMessage()\n            };\n          }}\n          className='w-5 h-5 cursor-pointer hover:bg-gray-200 hover:rounded-md hover:font-bold'\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={context.colorMode.theme === 0 ? \"black\" : \"white\"}\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <path d=\"M22 2L11 13\" />\n            <path d=\"M22 2L15 22 11 13 2 9l20-7z\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ReloadMode","import { useContext } from 'react'\nimport { ViewContext } from 'contexts/view';\n\nconst RecordingMode = (props) => {\n  const { handleDeleteRecord, volume, stopRecording } = props;\n  const context = useContext(ViewContext);\n\n  return (\n    <div className='flex items-center justify-center gap-3 w-full'>\n      <div className='w-[5%] flex items-center justify-center pl-3 py-6'>\n        <div onClick={() => handleDeleteRecord()} className='hover:bg-gray-200 rounded-md'>\n          <svg\n            fill=\"red\"\n            viewBox=\"0 0 16 16\"\n            height=\"1.2em\"\n            width=\"1.2em\"\n            cursor={\"pointer\"}\n          >\n            <path d=\"M6.5 1h3a.5.5 0 01.5.5v1H6v-1a.5.5 0 01.5-.5zM11 2.5v-1A1.5 1.5 0 009.5 0h-3A1.5 1.5 0 005 1.5v1H2.506a.58.58 0 00-.01 0H1.5a.5.5 0 000 1h.538l.853 10.66A2 2 0 004.885 16h6.23a2 2 0 001.994-1.84l.853-10.66h.538a.5.5 0 000-1h-.995a.59.59 0 00-.01 0H11zm1.958 1l-.846 10.58a1 1 0 01-.997.92h-6.23a1 1 0 01-.997-.92L3.042 3.5h9.916zm-7.487 1a.5.5 0 01.528.47l.5 8.5a.5.5 0 01-.998.06L5 5.03a.5.5 0 01.47-.53zm5.058 0a.5.5 0 01.47.53l-.5 8.5a.5.5 0 11-.998-.06l.5-8.5a.5.5 0 01.528-.47zM8 4.5a.5.5 0 01.5.5v8.5a.5.5 0 01-1 0V5a.5.5 0 01.5-.5z\" />\n          </svg>\n        </div>\n      </div>\n      <div className='w-[85%] relative flex items-center h-full'>\n        <div style={{\n          width: '100%',\n          height: '10px',\n          background: 'gray',\n          position: 'relative',\n          overflow: 'hidden',\n        }}>\n          <div style={{\n            width: `${volume}%`,\n            height: '100%',\n            background: 'red',\n            position: 'absolute',\n            left: 0,\n            transition: 'width 0.1s'\n          }} />\n        </div>\n      </div>\n      <div className='w-[10%] flex items-center justify-center py-6'>\n        <div onClick={() => stopRecording()}  className='hover:bg-gray-200 rounded-md'>\n          <svg\n            viewBox=\"0 0 1024 1024\"\n            fill={context.colorMode.theme === 0 ? \"black\" : \"white\"}\n            height=\"1.4em\"\n            width=\"1.4em\"\n            cursor={\"pointer\"}\n            // className='hover:bg-gray-300 hover:rounded-sm'\n          >\n            <path d=\"M304 176h80v672h-80zm408 0h-64c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8z\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RecordingMode","import { useRef, useState } from 'react';\r\nimport DefaultMode from './chat_footer/default_mode';\r\nimport ReloadMode from './chat_footer/reload_mode';\r\nimport RecordingMode from './chat_footer/recording_mode';\r\n\r\nconst ChatFooter = ({\r\n  file,\r\n  setFile,\r\n  message,\r\n  setMessage,\r\n  audio,\r\n  setAudio,\r\n  setRAudio,\r\n  handleSendMessage,\r\n  isMessageSending\r\n}) => {\r\n  const fileInputRef = useRef(null);\r\n\r\n  const audioChunksRef = useRef([]);\r\n  const audioContextRef = useRef(null);\r\n  const dataArrayRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n\r\n  const [mode, setMode] = useState('default');\r\n  const [volume, setVolume] = useState(0);\r\n\r\n  const startRecording = () => {\r\n    setFile(null);\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        audioContextRef.current = audioContext;\r\n        const source = audioContext.createMediaStreamSource(stream);\r\n        const analyser = audioContext.createAnalyser();\r\n        analyser.fftSize = 256;\r\n        analyserRef.current = analyser;\r\n        const bufferLength = analyser.frequencyBinCount;\r\n        const dataArray = new Uint8Array(bufferLength);\r\n        dataArrayRef.current = dataArray;\r\n\r\n        source.connect(analyser);\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus' }; // Используем правильный MIME-тип\r\n        const mediaRecorder = new MediaRecorder(stream, options);\r\n        mediaRecorderRef.current = mediaRecorder;\r\n        mediaRecorder.start();\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n            audioChunksRef.current.push(event.data);\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/ogg; codecs=opus' });\r\n          const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n          // Создаем объект File вместо Blob\r\n          const audioFile = new File([audioBlob], 'recording.ogg', { type: 'audio/ogg; codecs=opus' });\r\n\r\n          setAudio(audioUrl);\r\n          setRAudio(audioFile);\r\n\r\n          audioChunksRef.current = [];\r\n          audioContext.close();\r\n          cancelAnimationFrame(animationRef.current);\r\n        };\r\n\r\n        setMode('recording');\r\n\r\n        animate();\r\n      })\r\n      .catch(error => {\r\n          console.error('Ошибка при записи аудио:', error);\r\n      });\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setMode('reload');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRecord = () => {\r\n    setMode('default');\r\n  };\r\n\r\n  const handleReloadRecord = () => {\r\n    setAudio(null);\r\n    setRAudio(null);\r\n    startRecording();\r\n    setMode('recording');\r\n  };\r\n\r\n  const animate = () => {\r\n    if (analyserRef.current && dataArrayRef.current) {\r\n      analyserRef.current.getByteFrequencyData(dataArrayRef.current);\r\n      const maxVolume = Math.max(...dataArrayRef.current);\r\n      setVolume(maxVolume);\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setAudio(null);\r\n    setRAudio(null);\r\n    const selectedFile = e.target.files[0];\r\n    setMessage(\"\");\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex items-center gap-2 border-t border-slate-300'>\r\n      {mode === 'default' && (\r\n        <DefaultMode\r\n          fileInputRef={fileInputRef}\r\n          handleFileChange={handleFileChange}\r\n          file={file}\r\n          setFile={setFile}\r\n          message={message}\r\n          setMessage={setMessage}\r\n          handleSendMessage={handleSendMessage}\r\n          startRecording={startRecording}\r\n          isMessageSending={isMessageSending}\r\n        />\r\n      )}\r\n      {mode === 'recording' && (\r\n        <RecordingMode\r\n          volume={volume}\r\n          stopRecording={stopRecording}\r\n          handleDeleteRecord={handleDeleteRecord}\r\n        />\r\n      )}\r\n      {mode === 'reload' && (\r\n        <ReloadMode\r\n          handleDeleteRecord={handleDeleteRecord}\r\n          audio={audio}\r\n          handleReloadRecord={handleReloadRecord}\r\n          handleSendMessage={handleSendMessage}\r\n          isMessageSending={isMessageSending}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatFooter","import ChatTitle from './conversation/chat_title';\r\nimport Chat from './conversation/chat';\r\nimport ChatFooter from './conversation/chat_footer';\r\nimport { useContext } from 'react';\r\nimport { ViewContext } from 'contexts/view';\r\n\r\nconst Conversation = ({\r\n  isFavorite,\r\n  conversation,\r\n  setConversation,\r\n  fetchConversations,\r\n  activeCustomer,\r\n  setActiveCustomer,\r\n  message,\r\n  setMessage,\r\n  file,\r\n  setFile,\r\n  handleSendMessage,\r\n  setConversations,\r\n  setCurrentPage,\r\n  audio,\r\n  setAudio,\r\n  rAudio,\r\n  setRAudio,\r\n  isMessageSending\r\n}) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  return (\r\n    <div className='flex flex-col justify-between sm:w-1/2 overflow-y-auto'>\r\n      {activeCustomer.id ? (\r\n        <>\r\n          <ChatTitle\r\n            isFavorite={isFavorite}\r\n            activeCustomer={activeCustomer}\r\n            setActiveCustomer={setActiveCustomer}\r\n            title={activeCustomer.customer_good}\r\n            fetchConversations={fetchConversations}\r\n            setConversations={setConversations}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n          <Chat\r\n            conversation={conversation}\r\n            setConversation={setConversation}\r\n            activeCustomer={activeCustomer}\r\n          />\r\n          <ChatFooter\r\n            file={file}\r\n            setFile={setFile}\r\n            message={message}\r\n            setMessage={setMessage}\r\n            handleSendMessage={handleSendMessage}\r\n            audio={audio}\r\n            setAudio={setAudio}\r\n            rAudio={rAudio}\r\n            setRAudio={setRAudio}\r\n            isMessageSending={isMessageSending}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div className='h-full flex flex-col items-center justify-center pb-10'>\r\n          <p\r\n            className={`\r\n              font-bold text-2xl\r\n              ${context.colorMode.theme === 0 && 'text-black'}\r\n              ${context.colorMode.theme === 1 && 'text-white'}\r\n            `}\r\n          >\r\n            Пожалуйста выберите чат\r\n          </p>\r\n          <img src='assets/to_left.png' className='w-1/2'/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversation","import { ViewContext } from 'contexts/view'\r\nimport React, { useContext } from 'react'\r\n\r\nconst ConversationInfo = ({ activeCustomer, setMessage, setFile }) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleSetCert = async (url) => {\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error('Image fetch failed');\r\n\r\n    // '/templates/alco-cert.jpg'\r\n    const name = url.split('/').pop();;\r\n\r\n    const blob = await response.blob();\r\n    const file = new File([blob], name, { type: 'image/jpeg' });\r\n    setFile(file);\r\n  };\r\n\r\n  return (\r\n    <div className='h-full w-full sm:w-1/4 border-l border-slate-300 overflow-y-auto'>\r\n      {activeCustomer.id ? (\r\n        <div className=\"flex flex-col gap-6 items-center py-6\">\r\n          <img\r\n            src={activeCustomer.customer_photo ?? 'assets/avatar-default.svg'}\r\n            className='h-16 w-16 rounded-full border border-slate-300'\r\n          />\r\n\r\n          <div className='flex flex-col gap-2 items-start border-t border-b w-full px-2 py-4'>\r\n            <p\r\n              className={`\r\n                text-md cursor-pointer hover:text-gray-300\r\n                ${context.colorMode.theme === 0 && 'text-black'}\r\n                ${context.colorMode.theme === 1 && 'text-white'}\r\n              `}\r\n              onClick={() => handleSetCert('/templates/alco-cert.jpg')}\r\n            >\r\n              1. AlcoBalance\r\n            </p>\r\n            <p\r\n              className={`\r\n                text-md cursor-pointer hover:text-gray-300\r\n                ${context.colorMode.theme === 0 && 'text-black'}\r\n                ${context.colorMode.theme === 1 && 'text-white'}\r\n              `}\r\n              onClick={() => handleSetCert('/templates/body-cert.jpg')}\r\n            >\r\n              2. BodyBalance\r\n            </p>\r\n            <p\r\n              className={`\r\n                text-md cursor-pointer hover:text-gray-300\r\n                ${context.colorMode.theme === 0 && 'text-black'}\r\n                ${context.colorMode.theme === 1 && 'text-white'}\r\n              `}\r\n              onClick={() => handleSetCert('/templates/ero-cert.jpg')}\r\n            >\r\n              3. EroKing\r\n            </p>\r\n            <p\r\n              className={`\r\n                text-md cursor-pointer hover:text-gray-300\r\n                ${context.colorMode.theme === 0 && 'text-black'}\r\n                ${context.colorMode.theme === 1 && 'text-white'}\r\n              `}\r\n              onClick={() => handleSetCert('/templates/flex-cert.jpg')}\r\n            >\r\n              4. FlexBalance\r\n            </p>\r\n            <p\r\n              className={`\r\n                text-md cursor-pointer hover:text-gray-300\r\n                ${context.colorMode.theme === 0 && 'text-black'}\r\n                ${context.colorMode.theme === 1 && 'text-white'}\r\n              `}\r\n              onClick={() => handleSetCert('/templates/libido-cert.jpg')}\r\n            >\r\n              4. LibidoBalance\r\n            </p>\r\n            <p\r\n              className={`\r\n                text-md cursor-pointer hover:text-gray-300\r\n                ${context.colorMode.theme === 0 && 'text-black'}\r\n                ${context.colorMode.theme === 1 && 'text-white'}\r\n              `}\r\n              onClick={() => handleSetCert('/templates/man-cert.jpg')}\r\n            >\r\n              4. ManBalance\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className='h-full flex flex-col items-center justify-center'>\r\n          <img src='assets/select_emoji.png'/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConversationInfo","import axios from 'axios';\r\nimport { useContext, useEffect, useState, useRef } from 'react';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { ViewContext } from 'contexts/view';\r\nimport Conversations from './middle_section/conversations';\r\nimport Conversation from './middle_section/conversation';\r\nimport ConversationInfo from './middle_section/conversation_info';\r\n\r\nconst limit = 20;\r\n\r\nconst MiddleSection = ({ search, currentPage, setCurrentPage }) => {\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const [activeCustomer, setActiveCustomer] = useState({\r\n    id: null,\r\n    customer_good: \"\",\r\n    customer_phone: \"\",\r\n    leadvertex_id: null\r\n  });\r\n\r\n  const [conversation, setConversation] = useState([]);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [type, setType] = useState(0);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isMessageSending, setIsMessageSending] = useState(false);\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [audio, setAudio] = useState(null);\r\n  const [rAudio, setRAudio] = useState(null);\r\n  const [location, setLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, [search, type, currentPage]);\r\n\r\n  const fetchConversations = async () => {\r\n    const params = {\r\n      limit: limit,\r\n      page: currentPage,\r\n      type,\r\n    };\r\n\r\n    if(search !== \"\") {\r\n      params.search = search;\r\n    };\r\n\r\n    await axios({\r\n      method: 'GET',\r\n      url: `/customers`,\r\n      params: {\r\n        ...params\r\n      },\r\n    }).then((res) => {\r\n        if(search !== \"\") {\r\n          setConversations([...res.data.customers]);\r\n        } else if (search === \"\" && currentPage === 1) {\r\n          setConversations([...res.data.customers]);\r\n        } else {\r\n          setConversations(prev => [...prev, ...res.data.customers]);\r\n        };\r\n      })\r\n      .catch((err) => {\r\n        context.notification.show(err.response.data.detail, \"error\")\r\n      })\r\n  };\r\n\r\n  const fetchConversation = async (customer_id) => {\r\n    await axios({\r\n      method: 'GET',\r\n      url: `/messages/${customer_id}`,\r\n    })\r\n      .then((res) => {\r\n        setConversation(res.data.messages)\r\n        setIsFavorite(res.data.isFavorite)\r\n      })\r\n      .catch((err) => context.notification.show(err.response.data.detail, \"error\"))\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    if( !validateSendMessage() ) return;\r\n    setIsMessageSending(true);\r\n\r\n    const forms = new FormData();\r\n\r\n    forms.append('customer_id', activeCustomer.id);\r\n    if(message) {\r\n      forms.append('message', message);\r\n      forms.append('type', \"textMessage\");\r\n    }\r\n\r\n    if(rAudio) {\r\n      forms.append('files', rAudio);\r\n      forms.append('type', \"fileMessage\");\r\n    };\r\n\r\n    if(file) {\r\n      forms.append('files', file);\r\n      forms.append('type', \"fileMessage\");\r\n    };\r\n\r\n    if(location) {\r\n      forms.append('location', location);\r\n      forms.append('type', \"locationMessage\");\r\n    };\r\n\r\n    await axios({\r\n      method: \"POST\",\r\n      url: `/messages`,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: forms\r\n    })\r\n      .then((res) => {\r\n        const newConversation = [...conversation];\r\n        newConversation.push(res.data.message);\r\n        setConversation(newConversation);\r\n        setMessage('');\r\n        setFile(null);\r\n        setIsMessageSending(false);\r\n      })\r\n      .catch((err) => {\r\n        context.notification.show(err.response.data.detail, \"error\")\r\n      })\r\n  };\r\n\r\n  const validateSendMessage = () => {\r\n    if(file === null && message.length === 0 && rAudio === null) {\r\n      context.notification.show('Пустое сообщение', \"error\");\r\n      return false;\r\n    };\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className='flex flex-col sm:flex-row h-[88vh]'>\r\n      <Conversations\r\n        setCurrentPage={setCurrentPage}\r\n        fetchConversation={fetchConversation}\r\n        type={type}\r\n        setType={setType}\r\n        conversations={conversations}\r\n        setConversations={setConversations}\r\n        activeCustomer={activeCustomer}\r\n        setActiveCustomer={setActiveCustomer}\r\n        setFile={setFile}\r\n      />\r\n      <Conversation\r\n        isFavorite={isFavorite}\r\n        setConversations={setConversations}\r\n        setCurrentPage={setCurrentPage}\r\n        conversation={conversation}\r\n        setConversation={setConversation}\r\n        fetchConversations={fetchConversations}\r\n        activeCustomer={activeCustomer}\r\n        setActiveCustomer={setActiveCustomer}\r\n        message={message}\r\n        setMessage={setMessage}\r\n        file={file}\r\n        setFile={setFile}\r\n        handleSendMessage={handleSendMessage}\r\n        audio={audio}\r\n        setAudio={setAudio}\r\n        rAudio={rAudio}\r\n        setRAudio={setRAudio}\r\n        isMessageSending={isMessageSending}\r\n      />\r\n      <ConversationInfo\r\n        activeCustomer={activeCustomer}\r\n        setMessage={setMessage}\r\n        setFile={setFile}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiddleSection;\r\n","import { useState } from 'react';\r\nimport TopSection from './blocks/top_section';\r\nimport MiddleSection from './blocks/middle_section';\r\n\r\nexport default function MainPage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  return (\r\n    <div className='flex flex-col w-full min-h-[100vh]'>\r\n      <TopSection\r\n        search={search}\r\n        setSearch={setSearch}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <MiddleSection\r\n        search={search}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n}"],"names":["Logo","_jsx","src","alt","className","UserSettings","navigate","useNavigate","auth","useRef","useContext","AuthContext","context","ViewContext","avatar","setAvatar","useState","isSettingOpen","setIsSettingOpen","_jsxs","_Fragment","children","onClick","colorMode","setTheme","theme","viewBox","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","xmlns","Animate","type","user","role","id","Icon","image","color","signout","_ref","search","setSearch","setCurrentPage","SearchInput","value","onChange","text","handleSearch","setType","setConversations","handleChangeType","t","concat","props","conversations","activeCustomer","handleChatClick","currentPage","containerRef","raiseConversation","useSocketContext","useEffect","handleScroll","current","scrollHeight","scrollTop","clientHeight","prev","container","addEventListener","removeEventListener","handleRaiseConversation","prevConversations","existIndex","findIndex","c","customer_id","existingConversation","counter","splice","ref","length","map","conversation","i","_conversation$avatar","name","order_id","lastMessageTime","message","setMessage","leadvertex_id","setLeadVertexId","e","target","placeholder","async","axios","method","url","data","then","res","customer","modal","hide","notification","show","catch","err","response","detail","title","AddModal","size","setActiveCustomer","fetchConversation","setFile","raisedConversations","setRaisedConversations","TopConversations","MiddleConversations","FloatingButton","fetchConversations","isFavorite","customer_good","customer_phone","handleAddFavorite","_message$avatar","_message$attachments","openGoogleMaps","incoming","attachment_url","quoted_message","attachments","attachment","_attachment$contentTy","_attachment$contentTy2","_attachment$contentTy3","Fragment","contentType","includes","link","href","ChatAudio","thumb","lat","lon","controls","setConversation","messagesEndRef","newMessage","scrollToBottom","handleUpdateNewMessage","chat_phone","newConversation","push","scrollIntoView","behavior","window","open","Message","fileInputRef","handleFileChange","file","handleSendMessage","startRecording","isMessageSending","isPickedVisible","setIsPickedVisible","click","style","display","height","width","cursor","preventDefault","onKeyDown","key","disabled","Picker","previewPosition","onEmojiSelect","native","handleDeleteRecord","audio","handleReloadRecord","volume","stopRecording","background","position","overflow","left","transition","setAudio","setRAudio","audioChunksRef","audioContextRef","dataArrayRef","analyserRef","mediaRecorderRef","animationRef","mode","setMode","setVolume","navigator","mediaDevices","getUserMedia","stream","audioContext","AudioContext","webkitAudioContext","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","mediaRecorder","MediaRecorder","mimeType","start","ondataavailable","event","onstop","audioBlob","Blob","audioUrl","URL","createObjectURL","audioFile","File","close","cancelAnimationFrame","animate","error","console","getByteFrequencyData","maxVolume","Math","max","requestAnimationFrame","DefaultMode","selectedFile","files","RecordingMode","stop","ReloadMode","rAudio","ChatTitle","Chat","ChatFooter","_activeCustomer$custo","handleSetCert","fetch","ok","Error","split","pop","blob","customer_photo","setIsFavorite","setIsMessageSending","location","setLocation","params","limit","page","customers","validateSendMessage","Conversations","messages","Conversation","forms","FormData","append","headers","ConversationInfo","MainPage","TopSection","MiddleSection"],"sourceRoot":""}