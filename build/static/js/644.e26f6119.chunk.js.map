{"version":3,"file":"static/js/644.e26f6119.chunk.js","mappings":"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","sources":["views/home/blocks/top_section/logo.js","views/home/blocks/top_section/user_settings.js","views/home/blocks/top_section.js","views/home/blocks/middle_section/conversations/top_conversations.js","views/home/blocks/middle_section/conversations/middle_conversations.js","views/home/blocks/middle_section/conversations/add_modal.js","views/home/blocks/middle_section/conversations/floating_button.js","views/home/blocks/middle_section/conversations.js","views/home/blocks/middle_section/conversation/chat_title.js","views/home/blocks/middle_section/conversation/chat.js","views/home/blocks/middle_section/conversation/chat_footer.js","views/home/blocks/middle_section/conversation.js","views/home/blocks/middle_section/conversation_info.js","views/home/blocks/middle_section.js","views/home/index.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"text-[var(--theme-color)] w-[38px] flex-shrink-0\">\r\n      <svg className=\"w-full\" viewBox=\"0 0 513 513\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M256.025.05C117.67-2.678 3.184 107.038.025 245.383a240.703 240.703 0 0085.333 182.613v73.387c0 5.891 4.776 10.667 10.667 10.667a10.67 10.67 0 005.653-1.621l59.456-37.141a264.142 264.142 0 0094.891 17.429c138.355 2.728 252.841-106.988 256-245.333C508.866 107.038 394.38-2.678 256.025.05z\" />\r\n        <path d=\"M330.518 131.099l-213.825 130.08c-7.387 4.494-5.74 15.711 2.656 17.97l72.009 19.374a9.88 9.88 0 007.703-1.094l32.882-20.003-10.113 37.136a9.88 9.88 0 001.083 7.704l38.561 63.826c4.488 7.427 15.726 5.936 18.003-2.425l65.764-241.49c2.337-8.582-7.092-15.72-14.723-11.078zM266.44 356.177l-24.415-40.411 15.544-57.074c2.336-8.581-7.093-15.719-14.723-11.078l-50.536 30.744-45.592-12.266L319.616 160.91 266.44 356.177z\" fill=\"#fff\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo","import axios from 'axios';\r\nimport { useContext, useRef, useState } from 'react'\r\nimport { Animate, Icon } from 'components/lib';\r\nimport { ViewContext } from 'contexts/view';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserSettings = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [isSettingOpen, setIsSettingOpen] = useState(false);\r\n  // const [isAvatarOpen, setIsAvatarOpen] = useState(false);\r\n\r\n  // const handleFileChange = async(e) => {\r\n  //   const selectedFile = e.target.files[0];\r\n  //   if (selectedFile) {\r\n  //     setAvatar(selectedFile);\r\n  //   }\r\n  //   await handleUploadAvatar();\r\n  // };\r\n\r\n  // const handleUploadAvatar = async () => {\r\n  //   if (avatar === null) {\r\n  //     context.notification.show(\"Загрузите аватар\", \"error\")\r\n  //     return;\r\n  //   }\r\n\r\n  //   await axios({\r\n  //     method: \"POST\",\r\n  //     url: `/v1/upload_avatar`,\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //       'Authorization': `Bearer ${auth.user.token}`\r\n  //     },\r\n  //     data: {\r\n  //       avatar: avatar\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       context.notification.show(err.response.data.detail, \"error\")\r\n  //     })\r\n  // };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-3 cursor-pointer ml-auto flex-shrink-0\">\r\n        <div onClick={() => context.colorMode.setTheme(context.colorMode.theme === 0 ? 1 : 0)} className=\"w-[22px] h-[22px] text-[var(--settings-icon-color)] flex-shrink-0 hover:text-gray-400\">\r\n          {context.colorMode.theme === 0 ? (\r\n            <svg className=\"w-full fill-transparent transition-all duration-500\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <path d=\"M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z\" />\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"w-full fill-transparent transition-all duration-500\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"1.5\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"5\" />\r\n              <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\r\n              <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\r\n              <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\r\n              <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\r\n              <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\r\n              <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\r\n              <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\r\n              <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\r\n            </svg>\r\n          )}\r\n        </div>\r\n        <div \r\n          onClick={() => {\r\n            // setIsAvatarOpen(false);\r\n            setIsSettingOpen(!isSettingOpen)\r\n          }}\r\n          className=\"text-[var(--settings-icon-color)] w-[22px] h-[22px] flex-shrink-0 hover:text-gray-400\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n            <path d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 010 2.83 2 2 0 01-2.83 0l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-2 2 2 2 0 01-2-2v-.09A1.65 1.65 0 009 19.4a1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83 0 2 2 0 010-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 01-2-2 2 2 0 012-2h.09A1.65 1.65 0 004.6 9a1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 010-2.83 2 2 0 012.83 0l.06.06a1.65 1.65 0 001.82.33H9a1.65 1.65 0 001-1.51V3a2 2 0 012-2 2 2 0 012 2v.09a1.65 1.65 0 001 1.51 1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 0 2 2 0 010 2.83l-.06.06a1.65 1.65 0 00-.33 1.82V9a1.65 1.65 0 001.51 1H21a2 2 0 012 2 2 2 0 01-2 2h-.09a1.65 1.65 0 00-1.51 1z\" />\r\n          </svg>\r\n        </div>\r\n        <img \r\n          // onClick={() => {\r\n          //   setIsSettingOpen(false);\r\n          //   setIsAvatarOpen(!isAvatarOpen);\r\n          // }} \r\n          className=\"w-[40px] h-[40px] rounded-full border border-slate-300\" \r\n          src=\"assets/avatar-default.svg\" alt=\"account-profile\"\r\n        />\r\n      </div>\r\n      {isSettingOpen && (\r\n        <div className='absolute top-16 right-5'>\r\n          <Animate type=\"slidedown\">\r\n            {auth.user.role === 1 && (\r\n              <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n                <div\r\n                  onClick={() => navigate('/admin')}\r\n                  className='cursor-pointer flex items-center justify-between hover:bg-neutral-200 px-4 py-2'\r\n                >\r\n                  <p className='font-semibold text-[14px] '>Админка</p>\r\n                  <Icon image=\"command\" color=\"green\"/>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n              <div\r\n                onClick={() => auth.auth.signout()}\r\n                className='cursor-pointer flex items-center justify-between hover:bg-gray-300 px-4 py-2'\r\n              >\r\n                <p className='font-semibold text-[14px] '>Выход</p>\r\n                <Icon image=\"log-out\" color=\"red\"/>\r\n              </div>\r\n            </div>\r\n          </Animate>\r\n        </div>\r\n      )}\r\n      {/* {isAvatarOpen && (\r\n        <div className='absolute top-16 right-5'>\r\n          <Animate type=\"slidedown\">\r\n            {auth.user.role === 'admin' && (\r\n              <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n                <div\r\n                  onClick={() => navigate('/admin')}\r\n                  className='cursor-pointer flex items-center justify-between hover:bg-neutral-200 px-4 py-2'\r\n                >\r\n                  <p className='font-semibold text-[14px]'>Админка</p>\r\n                  <Icon image=\"command\" color=\"green\"/>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className='shadow-xl w-[200px] bg-white rounded-lg border border-slate-300'>\r\n              <div\r\n                onClick={() => fileInputRef.current.click()}\r\n                className='cursor-pointer flex items-center justify-between hover:bg-gray-300 px-4 py-2'\r\n              >\r\n                <p className='font-semibold text-[14px]'>Аватар</p>\r\n                <Icon image=\"image\" color=\"black\"/>\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n              />\r\n            </div>\r\n          </Animate>\r\n        </div>\r\n      )} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSettings","import { SearchInput } from 'components/lib';\r\nimport Logo from './top_section/logo';\r\nimport UserSettings from './top_section/user_settings';\r\n\r\nconst TopSection = ({ search, setSearch, setCurrentPage }) => {\r\n\r\n  const handleSearch = (text) => {\r\n    setCurrentPage(1);\r\n    setSearch(text);\r\n  }\r\n\r\n  return (\r\n    <section className='h-[12vh] border-b border-slate-300 flex sm:flex-row'>\r\n      <div className={`w-[15%] sm:w-1/4 overflow-hidden flex items-center px-4`}>\r\n        <Logo/>\r\n      </div>\r\n      <div className='w-[50%] sm:w-1/2 overflow-hidden flex items-center'>\r\n        <SearchInput \r\n          value={search} \r\n          onChange={(text) => handleSearch(text)}\r\n        />\r\n      </div>\r\n      <div className='w-[35%] sm:w-1/4 overflow-hidden flex items-center justify-end px-4'>\r\n        <UserSettings/>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TopSection","import { ViewContext } from 'contexts/view'\r\nimport React, { useContext } from 'react'\r\n\r\nconst TopConversations = ({ type, setType, setCurrentPage, setConversations }) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleChangeType = (t) => {\r\n    setCurrentPage(1);\r\n    if(type !== t) {\r\n      setConversations([]);\r\n    }\r\n    setType(t) \r\n  };\r\n\r\n  return (\r\n    <div className='w-full min-h-[6vh] flex items-center select-none border-b border-slate-300'>\r\n      <div \r\n        onClick={() => handleChangeType(0)} \r\n        className={`\r\n          h-full w-1/2 flex items-center \r\n          justify-center cursor-pointer border-r border-slate-300 \r\n          ${type === 0 && context.colorMode.theme === 0 && 'bg-gray-300'} \r\n          ${type === 0 && context.colorMode.theme === 1 && 'bg-[#404d69]'} \r\n        `}\r\n      >\r\n        <p \r\n          className={`\r\n            font-semibold text-[13px] \r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        >\r\n          Все\r\n        </p>\r\n      </div>\r\n      <div\r\n        onClick={() => handleChangeType(1)} \r\n        className={`\r\n          h-full w-1/2 flex items-center \r\n          justify-center cursor-pointer\r\n          ${type === 1 && context.colorMode.theme === 0 && 'bg-gray-300'} \r\n          ${type === 1 && context.colorMode.theme === 1 && 'bg-[#404d69]'} \r\n        `}\r\n      >\r\n        <p \r\n          className={`\r\n            font-semibold text-[13px] \r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        >\r\n          Избранные\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopConversations","import { Icon } from 'components/lib';\r\nimport { useSocketContext } from 'contexts/socket'\r\nimport { ViewContext } from 'contexts/view'\r\nimport React, { useContext, useEffect, useRef } from 'react'\r\n\r\nconst MiddleConversations = (props) => {\r\n  const { \r\n    conversations, \r\n    activeConversation, handleChatClick, \r\n    setConversations, setCurrentPage,\r\n    currentPage\r\n  } = props;\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const context = useContext(ViewContext);\r\n  const { raiseConversation } = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (containerRef.current) {\r\n        const { scrollHeight, scrollTop, clientHeight } = containerRef.current;\r\n        if (scrollTop + clientHeight + 1 >= scrollHeight) {\r\n          setCurrentPage(prev => prev + 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      container.addEventListener('scroll', handleScroll);\r\n    }\r\n\r\n    return () => {\r\n      if (container) {\r\n        container.removeEventListener('scroll', handleScroll);\r\n      }\r\n    };\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (raiseConversation) {\r\n      handleRaiseConversation();\r\n    }\r\n  }, [raiseConversation]);\r\n\r\n  const handleRaiseConversation = () => {\r\n    setConversations((prevConversations) => {\r\n      const existIndex = prevConversations.findIndex((c) => c.customer_id === raiseConversation.customer_id);\r\n  \r\n      if (existIndex !== -1) {\r\n        const existingConversation = prevConversations[existIndex];\r\n        existingConversation.counter = (existingConversation.counter || 0) + (raiseConversation.counter || 0);\r\n        prevConversations.splice(existIndex, 1);\r\n  \r\n        return [existingConversation, ...prevConversations];\r\n      } else {\r\n        return [{ ...raiseConversation, counter: raiseConversation.counter || 0 }, ...prevConversations];\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} className='flex-grow overflow-y-auto'>\r\n      {conversations.length > 0 && conversations.map((conversation, i) => (\r\n        <div \r\n          key={conversation.customer_id} \r\n          onClick={() => handleChatClick(conversation)} \r\n          className={`relative select-none\r\n            cursor-pointer flex items-center gap-2 px-5 py-3 \r\n            ${context.colorMode.theme === 0 && 'hover:bg-gray-300'}\r\n            ${context.colorMode.theme === 1 && 'hover:bg-[#2d3f65]'}\r\n            ${activeConversation.customer_id === conversation.customer_id && context.colorMode.theme === 0 && 'bg-gray-300'}\r\n            ${activeConversation.customer_id === conversation.customer_id && context.colorMode.theme === 1 && 'bg-[#2d3f65]'}\r\n          `}\r\n        >\r\n          {activeConversation.customer_id === conversation.customer_id && \r\n            <div className='absolute left-0 h-full w-1 bg-[#0086FF]'/>\r\n          }\r\n          <div className=\"relative inline-block\">\r\n            <img \r\n              src={conversation.customer_photo ?? 'assets/avatar-default.svg'} \r\n              className='border border-slate-300 rounded-full w-10 h-10'\r\n            />\r\n            {/* {onlineUsers.includes(conversation.customer_id) ? (\r\n              <div\r\n                className=\"absolute bottom-0 right-0 w-3 h-3 border-2 border-white rounded-full bg-[#47cf73]\"\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"absolute bottom-0 right-0 w-3 h-3 border-2 border-white rounded-full bg-[#b3b5b8]\"\r\n              />\r\n            )} */}\r\n          </div>\r\n    \r\n          <div className='flex flex-col'>\r\n            <p className={`font-semibold text-[15px] ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}`}>\r\n              {conversation.leadvertex_id}\r\n            </p>\r\n            <div className='flex items-center overflow-hidden gap-1'> \r\n              <p className=\"whitespace-nowrap overflow-hidden overflow-ellipsis text-[var(--msg-message)] text-[13px]\">\r\n                {conversation.customer_good}\r\n              </p>\r\n              {/* <p className=\"whitespace-nowrap overflow-hidden overflow-ellipsis text-[var(--msg-message)] text-[13px]\">\r\n                {conversation?.lastMessage.length > 35 ? `${conversation?.lastMessage.slice(0, 35)}...` : conversation?.lastMessage}\r\n              </p> */}\r\n              <p className=\"text-[14px] text-[var(--msg-date)] ml-3 relative\">\r\n                <span className=\"absolute top-0 left-[-10px]\">&#8226;</span>\r\n                {conversation.lastMessageTime}\r\n              </p>\r\n            </div>\r\n            {conversation?.counter && (\r\n              <div className='absolute top-2 right-2 overflow-hidden'>\r\n                <p className='flex items-center justify-center text-[12px] w-5 h-5 bg-red-500 rounded-full text-white'>{conversation?.counter > 100 ? \"99+\" : conversation?.counter}</p>\r\n              </div>\r\n            )} \r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiddleConversations","import axios from 'axios';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { ViewContext } from 'contexts/view';\r\nimport { useState, useEffect, useContext } from 'react'\r\n\r\nconst AddModal = ({ setConversations }) => {\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [leadvertex_id, setLeadVertexId] = useState(null);\r\n\r\n  const handleSendUser = async () => {\r\n    if(!message || !leadvertex_id) {\r\n      context.notification.show(\"Заполните все поля\", \"error\");\r\n      return;\r\n    };\r\n\r\n    await axios({\r\n      method: 'POST',\r\n      url: `v1/send_first_message`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth.user.token}`\r\n      },\r\n      data: {\r\n        message: message,\r\n        leadvertex_id: leadvertex_id,\r\n        sender: auth.user.manager_name\r\n      }\r\n    })\r\n      .then((res) => {\r\n        setConversations((prev) => {\r\n          return [res.data.new_customer, ...prev]\r\n        })\r\n        context.modal.hide();\r\n        context.notification.show(\"Успешно!\", \"success\");\r\n      })\r\n      .catch((err) => context.notification.show(err.response.data.detail, \"error\"))\r\n  }\r\n \r\n  return (\r\n    <div className='flex flex-col gap-6 h-[25vh]'>\r\n      <div className='flex items-center gap-3'>\r\n        <p className='w-32 font-semibold text-lg'>LeadVertext_Id:</p>\r\n        <input\r\n          type=\"text\"\r\n          value={leadvertex_id}\r\n          onChange={(e) => setLeadVertexId(e.target.value)}\r\n          placeholder=\"Введите...\"\r\n          className={`pl-[16px] outline-none h-8 w-full \r\n            bg-transparent text-body-color bg-no-repeat \r\n            bg-[length:16px] bg-[25px_48%] font-body-font \r\n            font-semibold text-[15px] placeholder-input-chat-color\r\n            border border-slate-300 rounded-lg\r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        />\r\n      </div>\r\n      <div className='flex items-center gap-3'>\r\n        <p className='w-32 font-semibold text-lg'>Сообщение:</p>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Введите...\"\r\n          className={`pl-[16px] outline-none h-8 w-full \r\n            bg-transparent text-body-color bg-no-repeat \r\n            bg-[length:16px] bg-[25px_48%] font-body-font \r\n            font-semibold text-[15px] placeholder-input-chat-color\r\n            border border-slate-300 rounded-lg\r\n            ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n          `}\r\n        />\r\n      </div>\r\n      <button\r\n        onClick={handleSendUser}\r\n        className={`ml-auto max-w-[20vh] mt-4 bg-white p-2 \r\n          rounded-lg hover:bg-blue-100 border border-slate-300\r\n        `}\r\n      >\r\n        Отправить\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddModal","import { Icon } from 'components/lib'\r\nimport { ViewContext } from 'contexts/view';\r\nimport React, { useContext } from 'react'\r\nimport AddModal from './add_modal';\r\n\r\nconst FloatingButton = ({ setConversations }) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleAddConversation = () => {\r\n    context.modal.show({\r\n      title: 'Написать первым',\r\n      children: <AddModal setConversations={setConversations}/>\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div \r\n      onClick={() => handleAddConversation()}\r\n      className='fixed bottom-3 left-3 bg-[#0086FF] w-8 h-8 rounded-full flex items-center justify-center cursor-pointer shadow-xl'\r\n    >\r\n      <Icon image=\"plus\" color=\"white\" size={28}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FloatingButton","import TopConversations from './conversations/top_conversations';\r\nimport MiddleConversations from './conversations/middle_conversations';\r\nimport FloatingButton from './conversations/floating_button';\r\nimport { useSocketContext } from 'contexts/socket';\r\n\r\nconst Conversations = (props) => {\r\n  const {\r\n    activeConversation, setActiveConversation, \r\n    type, setType, conversations, setConversations, \r\n    fetchConversation, setCurrentPage,\r\n    currentPage, setAudio\r\n  } = props;\r\n\r\n  const { raisedConversations, setRaisedConversations } = useSocketContext();\r\n\r\n  const handleChatClick = (conversation) => {\r\n    if (raisedConversations && raisedConversations.length > 0) {\r\n      setConversations((prevConversations) => {\r\n        return prevConversations.map((c) => {\r\n          const exist = raisedConversations.find((raisedConv) => raisedConv.customer_id === c.customer_id);\r\n          if (exist && c.customer_id === conversation.customer_id) {\r\n            return { ...c, counter: null };\r\n          }\r\n          return c;\r\n        });\r\n      });\r\n  \r\n      const newRaisedConversations = raisedConversations.filter(\r\n        (raisedConv) => raisedConv.customer_id !== conversation.customer_id\r\n      );\r\n      setRaisedConversations(newRaisedConversations);\r\n    }\r\n  \r\n    setActiveConversation(conversation);\r\n    fetchConversation(conversation.customer_id);\r\n    setAudio(null);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className='flex flex-col h-full w-full sm:w-1/4 overflow-y-auto border-r border-slate-300 relative'>\r\n      <TopConversations\r\n        type={type}\r\n        setType={setType}\r\n        setCurrentPage={setCurrentPage}\r\n        setConversations={setConversations}\r\n      />\r\n      <MiddleConversations\r\n        conversations={conversations}\r\n        activeConversation={activeConversation} \r\n        handleChatClick={handleChatClick}\r\n        setConversations={setConversations}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <FloatingButton \r\n        setConversations={setConversations}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversations;\r\n","import axios from 'axios';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { ViewContext } from 'contexts/view'\r\nimport React, { useContext } from 'react'\r\n\r\nconst ChatTitle = ({ fetchConversations, isFavorite, title, activeConversation }) => {\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const handleAddFavorite = async () => {\r\n    await axios({\r\n      method: 'POST',\r\n      url: `v1/add_favorite`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth.user.token}`\r\n      },\r\n      params: {\r\n        customer_id: activeConversation.customer_id\r\n      }\r\n    })\r\n      .then(() => fetchConversations())\r\n      .catch((err) => context.notification.show(err.response.data.detail, \"error\"))\r\n  };\r\n  \r\n  return (\r\n    <div className='flex items-center justify-between px-6 py-6 border-b border-slate-300'>\r\n      <div className={`text-[18px] font-semibold ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}`}>{title}</div>\r\n      <div onClick={() => handleAddFavorite()}>\r\n        <svg \r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\" \r\n          fill={`${isFavorite ? 'red' : 'none'}`} \r\n          stroke=\"currentColor\" \r\n          strokeWidth=\"1.5\" \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\" \r\n          className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\r\n        >\r\n          <path\r\n            d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" \r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatTitle","import { useSocketContext } from \"contexts/socket\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { ChatAudio } from \"components/lib\";\r\n\r\nconst Chat = ({ conversation, setConversation, activeConversation }) => {\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const { newMessage } = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [conversation]);\r\n\r\n  useEffect(() => {\r\n    if (newMessage) {\r\n      handleUpdateNewMessage(newMessage);\r\n    }\r\n  }, [newMessage]);\r\n\r\n  const handleUpdateNewMessage = (newMessage) => {\r\n    if(activeConversation.customer_phone === newMessage.chat_phone) {\r\n      const newConversation = [...conversation];\r\n      newConversation.push(newMessage);\r\n      setConversation(newConversation);\r\n    };\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className='w-full h-full flex flex-col gap-3 overflow-y-auto px-6 py-6'>\r\n      {conversation?.length > 0 && conversation?.map((message) => (\r\n        <div\r\n          key={message.id}\r\n          className={`flex items-end gap-2 ${!message.message_incoming ? 'flex-row-reverse' : 'flex-row'}`}\r\n        >\r\n          <img src={message.sender_avatar ?? 'assets/avatar-default.svg'} alt='avatar' className='h-10 w-10 rounded-full border border-slate-300'/>\r\n          <div \r\n            className={`\r\n              inline-block min-w-[10px] max-w-[50%]\r\n              ${message.message_incoming && !message.attachment_url && 'rounded-r-xl rounded-tl-xl bg-[#fff] text-black px-3 py-3'}\r\n              ${!message.message_incoming && !message.attachment_url && 'rounded-l-xl rounded-tr-xl bg-[#0086FF] text-white px-3 py-3'}\r\n            `}\r\n          >\r\n            {message.message_type === \"message\" && <>{message.message_text}</>}\r\n            {message.message_type === \"photo\" && \r\n              <img\r\n                src={\r\n                  message.attachment_url ? (\r\n                    !message.message_incoming ?\r\n                      'http://31.128.41.42:8000/v1/' + message.attachment_url \r\n                      : message.attachment_url\r\n                  ) : 'assets/no-image.jpg'\r\n                } \r\n                alt={`message_${message.id}`} \r\n                className='w-fit min-h-16 max-h-40 rounded-lg'\r\n              />}\r\n            {(message.message_type === \"doc\" || message.message_type === 'audio') && <ChatAudio src={message.attachment_url} />}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat","import { useContext, useRef, useState } from 'react';\r\nimport { ViewContext } from 'contexts/view';\r\nimport Picker from '@emoji-mart/react';\r\nimport data from '@emoji-mart/data';\r\nimport lamejs from 'lamejs';\r\n\r\nconst ChatFooter = ({ \r\n  file, \r\n  setFile,\r\n  message, \r\n  setMessage, \r\n  audio, \r\n  setAudio, \r\n  setRAudio,\r\n  handleSendMessage \r\n}) => {\r\n  const context = useContext(ViewContext);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const audioChunksRef = useRef([]);\r\n  const audioContextRef = useRef(null);\r\n  const dataArrayRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n\r\n  const [mode, setMode] = useState('default');\r\n  const [volume, setVolume] = useState(0);\r\n  const [isPickedVisible, setIsPickedVisible] = useState(false);\r\n\r\n  // const convertToMp3 = async (blob) => {\r\n  //   const reader = new FileReader();\r\n  //   reader.readAsArrayBuffer(blob);\r\n  //   reader.onloadend = async () => {\r\n  //     const arrayBuffer = reader.result;\r\n  //     const buffer = new Int16Array(arrayBuffer);\r\n  \r\n  //     // Убедимся, что длина буфера кратна 2\r\n  //     const bufferSize = Math.floor(buffer.length / 2) * 2;\r\n  //     const buffer2 = buffer.subarray(0, bufferSize);\r\n  \r\n  //     const mp3Encoder = new lamejs.Mp3Encoder(1, 44100, 128); // Создаем кодировщик MP3\r\n  //     const mp3Data = [];\r\n  //     const sampleBlockSize = 1152; // Размер блока выборки\r\n  \r\n  //     for (let i = 0; i < bufferSize; i += sampleBlockSize) {\r\n  //       const sampleChunk = buffer2.subarray(i, i + sampleBlockSize);\r\n  //       const mp3buf = mp3Encoder.encodeBuffer(sampleChunk);\r\n  //       if (mp3buf.length > 0) {\r\n  //         mp3Data.push(new Int8Array(mp3buf));\r\n  //       }\r\n  //     }\r\n  \r\n  //     const mp3Blob = new Blob(mp3Data, { type: 'audio/mp3' }); // Создаем Blob для MP3 данных\r\n  //     const mp3Url = URL.createObjectURL(mp3Blob);\r\n  //     console.log(mp3Blob);\r\n      // Делаем что-то с mp3Url, например, сохраняем или воспроизводим\r\n  \r\n      // Здесь можно вызывать функцию для обработки полученного MP3\r\n  //   };\r\n  // };\r\n  \r\n  const startRecording = () => {\r\n    setFile(null);\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        audioContextRef.current = audioContext;\r\n        const source = audioContext.createMediaStreamSource(stream);\r\n        const analyser = audioContext.createAnalyser();\r\n        analyser.fftSize = 256;\r\n        analyserRef.current = analyser;\r\n        const bufferLength = analyser.frequencyBinCount;\r\n        const dataArray = new Uint8Array(bufferLength);\r\n        dataArrayRef.current = dataArray;\r\n  \r\n        source.connect(analyser);\r\n  \r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        mediaRecorderRef.current = mediaRecorder;\r\n        mediaRecorder.start();\r\n  \r\n        mediaRecorder.ondataavailable = (event) => {\r\n          audioChunksRef.current.push(event.data);\r\n        };\r\n  \r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/mp3' });\r\n          const audioUrl = URL.createObjectURL(audioBlob);\r\n  \r\n          setAudio(audioUrl);\r\n          setRAudio(audioBlob);\r\n  \r\n          audioChunksRef.current = [];\r\n          audioContext.close();\r\n          cancelAnimationFrame(animationRef.current);\r\n        };\r\n  \r\n        setMode('recording');\r\n  \r\n        animate();\r\n      })\r\n      .catch(error => {\r\n        console.error('Ошибка при записи аудио:', error);\r\n      });\r\n  };\r\n  \r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setMode('before');\r\n    }\r\n  };\r\n\r\n  const handleDeleteRecord = () => {\r\n    setMode('default');\r\n  };\r\n\r\n  const handleReloadRecord = () => {\r\n    setAudio(null);\r\n    setRAudio(null);\r\n    startRecording();\r\n    setMode('recording');\r\n  };\r\n\r\n  const animate = () => {\r\n    if (analyserRef.current && dataArrayRef.current) {\r\n      analyserRef.current.getByteFrequencyData(dataArrayRef.current);\r\n      const maxVolume = Math.max(...dataArrayRef.current);\r\n      setVolume(maxVolume);\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setAudio(null);\r\n    setRAudio(null);\r\n    const selectedFile = e.target.files[0];\r\n    setMessage(\"\");\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex items-center gap-2 border-t border-slate-300'>\r\n      {mode === 'default' && (\r\n        <>\r\n          <div className='w-[5%] flex items-center justify-center pl-3 py-6'>\r\n            <div onClick={() => fileInputRef.current.click()}>\r\n              <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                viewBox=\"0 0 24 24\" \r\n                fill=\"none\" \r\n                stroke=\"currentColor\" \r\n                strokeWidth=\"1.5\" \r\n                strokeLinecap=\"round\" \r\n                strokeLinejoin=\"round\" \r\n                className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\r\n              >\r\n                <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48\" />\r\n              </svg>\r\n            </div>\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              style={{ display: 'none' }}\r\n              onChange={handleFileChange}\r\n            />\r\n          </div>\r\n          <div className='w-[85%] relative flex items-center h-full'>\r\n            {file &&\r\n              <div className=\"absolute top-0\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <p className={`\r\n                    text-[10px]\r\n                    ${context.colorMode.theme === 0 ? 'text-black' : 'text-white'}\r\n                  `}>\r\n                    {file.name}\r\n                  </p>\r\n                  <svg\r\n                    viewBox=\"0 0 1024 1024\"\r\n                    fill=\"currentColor\"\r\n                    height=\"0.7em\"\r\n                    width=\"0.7em\"\r\n                    cursor=\"pointer\"\r\n                    onClick={() => setFile(null)}\r\n                  >\r\n                    <path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            }\r\n\r\n            <input \r\n              type=\"text\" \r\n              className='bg-[#EBEBEC] w-full outline-none h-10 rounded-md pl-3 border border-slate-300' \r\n              placeholder=\"Введите...\"\r\n              value={message}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                setMessage(e.target.value)\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  handleSendMessage();\r\n                }\r\n              }}\r\n              disabled={!!file}\r\n            />\r\n            <div className='absolute right-0 pr-3'>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"1.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\r\n                onClick={handleSendMessage}\r\n              >\r\n                <path d=\"M22 2L11 13\" />\r\n                <path d=\"M22 2L15 22 11 13 2 9l20-7z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className='w-[10%] flex items-center gap-2 py-6'>\r\n            <div onClick={() => startRecording()}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"1.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\r\n              >\r\n                <path d=\"M12 1a3 3 0 0 1 3 3v10a3 3 0 0 1-6 0V4a3 3 0 0 1 3-3z\"/>\r\n                <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"/>\r\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"/>\r\n                <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"/>\r\n              </svg>\r\n            </div>\r\n            <div onClick={() => setIsPickedVisible(!isPickedVisible)} >\r\n              <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                viewBox=\"0 0 24 24\" fill=\"none\" \r\n                stroke=\"currentColor\" \r\n                strokeWidth=\"1.5\" \r\n                strokeLinecap=\"round\" \r\n                strokeLinejoin=\"round\" \r\n                className=\"w-6 h-6 text-gray-300 cursor-pointer hover:text-gray-400 hover:font-bold\"\r\n              >\r\n                <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                <path d=\"M8 14s1.5 2 4 2 4-2 4-2M9 9h.01M15 9h.01\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          {isPickedVisible && (\r\n            <div className='absolute bottom-0 sm:bottom-20 sm:right-20'>\r\n              <Picker \r\n                data={data} \r\n                previewPosition=\"none\" \r\n                onEmojiSelect={(e) => {\r\n                  setMessage(message + e.native);\r\n                  setIsPickedVisible(!isPickedVisible);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {mode === 'recording' && (\r\n        <div className='flex items-center justify-center gap-3 w-full'>\r\n          <div className='w-[5%] flex items-center justify-center pl-3 py-6'>\r\n            <div onClick={() => handleDeleteRecord()}>\r\n              <svg\r\n                fill=\"red\"\r\n                viewBox=\"0 0 16 16\"\r\n                height=\"1.2em\"\r\n                width=\"1.2em\"\r\n                cursor={\"pointer\"}\r\n                className='hover:bg-slate-300 hover:rounded-xl'\r\n              >\r\n                <path d=\"M6.5 1h3a.5.5 0 01.5.5v1H6v-1a.5.5 0 01.5-.5zM11 2.5v-1A1.5 1.5 0 009.5 0h-3A1.5 1.5 0 005 1.5v1H2.506a.58.58 0 00-.01 0H1.5a.5.5 0 000 1h.538l.853 10.66A2 2 0 004.885 16h6.23a2 2 0 001.994-1.84l.853-10.66h.538a.5.5 0 000-1h-.995a.59.59 0 00-.01 0H11zm1.958 1l-.846 10.58a1 1 0 01-.997.92h-6.23a1 1 0 01-.997-.92L3.042 3.5h9.916zm-7.487 1a.5.5 0 01.528.47l.5 8.5a.5.5 0 01-.998.06L5 5.03a.5.5 0 01.47-.53zm5.058 0a.5.5 0 01.47.53l-.5 8.5a.5.5 0 11-.998-.06l.5-8.5a.5.5 0 01.528-.47zM8 4.5a.5.5 0 01.5.5v8.5a.5.5 0 01-1 0V5a.5.5 0 01.5-.5z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className='w-[85%] relative flex items-center h-full'>\r\n            <div style={{\r\n              width: '100%',\r\n              height: '10px',\r\n              background: 'gray',\r\n              position: 'relative',\r\n              overflow: 'hidden',\r\n            }}>\r\n              <div style={{\r\n                width: `${volume}%`,\r\n                height: '100%',\r\n                background: 'red',\r\n                position: 'absolute',\r\n                left: 0,\r\n                transition: 'width 0.1s'\r\n              }} />\r\n            </div>\r\n          </div>\r\n          <div className='w-[10%] flex items-center gap-2 py-6'>\r\n            <div onClick={() => stopRecording()}>\r\n              <svg\r\n                viewBox=\"0 0 1024 1024\"\r\n                fill={context.colorMode.theme === 0 ? \"black\" : \"white\"}\r\n                height=\"1.4em\"\r\n                width=\"1.4em\"\r\n                cursor={\"pointer\"}\r\n                className='hover:bg-gray-300 hover:rounded-xl'\r\n              >\r\n                <path d=\"M304 176h80v672h-80zm408 0h-64c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8z\" />\r\n              </svg>\r\n            </div>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke={context.colorMode.theme === 0 ? \"black\" : \"white\"}\r\n              strokeWidth=\"1.2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className='w-5 h-5 cursor-pointer hover:bg-gray-300 hover:rounded-md'\r\n              onClick={handleSendMessage}\r\n            >\r\n              <path d=\"M22 2L11 13\" />\r\n              <path d=\"M22 2L15 22 11 13 2 9l20-7z\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {mode === 'before' && (\r\n        <div className='flex items-center justify-center gap-3 w-full h-full'>\r\n          <div className='w-[5%] flex items-center justify-center pl-3 py-6'>\r\n            <div onClick={() => handleDeleteRecord()}>\r\n              <svg\r\n                fill=\"red\"\r\n                viewBox=\"0 0 16 16\"\r\n                height=\"1.2em\"\r\n                width=\"1.2em\"\r\n                cursor={\"pointer\"}\r\n                className='hover:bg-slate-300 hover:rounded-xl'\r\n              >\r\n                <path d=\"M6.5 1h3a.5.5 0 01.5.5v1H6v-1a.5.5 0 01.5-.5zM11 2.5v-1A1.5 1.5 0 009.5 0h-3A1.5 1.5 0 005 1.5v1H2.506a.58.58 0 00-.01 0H1.5a.5.5 0 000 1h.538l.853 10.66A2 2 0 004.885 16h6.23a2 2 0 001.994-1.84l.853-10.66h.538a.5.5 0 000-1h-.995a.59.59 0 00-.01 0H11zm1.958 1l-.846 10.58a1 1 0 01-.997.92h-6.23a1 1 0 01-.997-.92L3.042 3.5h9.916zm-7.487 1a.5.5 0 01.528.47l.5 8.5a.5.5 0 01-.998.06L5 5.03a.5.5 0 01.47-.53zm5.058 0a.5.5 0 01.47.53l-.5 8.5a.5.5 0 11-.998-.06l.5-8.5a.5.5 0 01.528-.47zM8 4.5a.5.5 0 01.5.5v8.5a.5.5 0 01-1 0V5a.5.5 0 01.5-.5z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className='w-[85%] flex items-center h-full'>\r\n            {audio && <audio controls src={audio} className='w-full'/>}\r\n          </div>\r\n          <div className='w-[10%] flex items-center gap-2 py-6'>\r\n            <div onClick={() => handleReloadRecord()}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke={context.colorMode.theme === 0 ? \"black\" : \"white\"}\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"w-5 h-5 text-gray-300 cursor-pointer hover:bg-gray-300 hover:rounded-lg hover:font-bold\"\r\n              >\r\n                <path d=\"M12 1a3 3 0 0 1 3 3v10a3 3 0 0 1-6 0V4a3 3 0 0 1 3-3z\"/>\r\n                <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"/>\r\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"/>\r\n                <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"/>\r\n              </svg>\r\n            </div>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke={context.colorMode.theme === 0 ? \"black\" : \"white\"}\r\n              strokeWidth=\"1.2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className='w-5 h-5 cursor-pointer hover:bg-gray-300 hover:rounded-md'\r\n              onClick={handleSendMessage}\r\n            >\r\n              <path d=\"M22 2L11 13\" />\r\n              <path d=\"M22 2L15 22 11 13 2 9l20-7z\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatFooter","import ChatTitle from './conversation/chat_title';\r\nimport Chat from './conversation/chat';\r\nimport ChatFooter from './conversation/chat_footer';\r\n\r\nconst Conversation = ({ \r\n  conversation, \r\n  setConversation, \r\n  fetchConversations, \r\n  activeConversation,\r\n  message,\r\n  setMessage,\r\n  file,\r\n  setFile,\r\n  audio,\r\n  setAudio,\r\n  setRAudio,\r\n  handleSendMessage\r\n}) => {\r\n  \r\n  return (\r\n    <div className='flex flex-col justify-between sm:w-1/2 overflow-y-auto'>\r\n      {activeConversation.customer_id && (\r\n        <>\r\n          <ChatTitle\r\n            isFavorite={conversation.isFavorite} \r\n            activeConversation={activeConversation}\r\n            title={activeConversation.customer_good}\r\n            fetchConversations={fetchConversations}\r\n          />\r\n          <Chat\r\n            conversation={conversation}\r\n            setConversation={setConversation}\r\n            activeConversation={activeConversation}\r\n          />\r\n          <ChatFooter \r\n            file={file}\r\n            setFile={setFile}\r\n            message={message}\r\n            setMessage={setMessage}\r\n            audio={audio}\r\n            setAudio={setAudio}\r\n            setRAudio={setRAudio}\r\n            handleSendMessage={handleSendMessage}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversation","import { ViewContext } from 'contexts/view'\r\nimport React, { useContext } from 'react'\r\nimport { AudioRecorder } from 'components/lib';\r\n\r\nconst ConversationInfo = ({ activeConversation, audio, setAudio, handleSendMessage }) => {\r\n  const context = useContext(ViewContext);\r\n\r\n  return (\r\n    <div className='h-full w-full sm:w-1/4 border-l border-slate-300 overflow-y-auto'>\r\n      {activeConversation.customer_id && (\r\n        <div className=\"flex flex-col gap-2 items-center py-6\">\r\n          <img \r\n            src={activeConversation.avatar ?? 'assets/avatar-default.svg'} \r\n            alt='avatar' \r\n            className='h-16 w-16 rounded-full border border-slate-300'\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConversationInfo","import axios from 'axios';\r\nimport { useContext, useEffect, useState, useRef } from 'react';\r\nimport Conversations from './middle_section/conversations';\r\nimport Conversation from './middle_section/conversation';\r\nimport ConversationInfo from './middle_section/conversation_info';\r\nimport { AuthContext } from 'contexts/auth';\r\nimport { ViewContext } from 'contexts/view';\r\n\r\nconst limit = 20;\r\n\r\nconst MiddleSection = ({ search, currentPage, setCurrentPage }) => {\r\n  const auth = useContext(AuthContext);\r\n  const context = useContext(ViewContext);\r\n\r\n  const [activeConversation, setActiveConversation] = useState({ customer_id: null, customer_good: \"\", customer_phone: \"\", leadvertex_id: null });\r\n  \r\n  const [conversation, setConversation] = useState([]);\r\n  const [type, setType] = useState(0);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [audio, setAudio] = useState(null);\r\n  const [rAudio, setRAudio] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, [search, type, currentPage]);\r\n\r\n  const fetchConversations = async () => {\r\n    const params = {\r\n      manager_id: auth.user.id,\r\n      customers_type: type,\r\n      page: currentPage,\r\n      limit: limit,\r\n    }\r\n\r\n    if(search !== \"\") {\r\n      params.search = search;\r\n    }\r\n\r\n    await axios({\r\n      method: 'GET',\r\n      url: `v1/get_conversations`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth.user.token}`\r\n      },\r\n      params: {\r\n        ...params\r\n      }\r\n    })\r\n      .then((res) => { \r\n        if(search !== \"\") {\r\n          setConversations([...res.data.customers]);\r\n        } else {\r\n          setConversations(prev => [...prev, ...res.data.customers]);\r\n        }\r\n      })\r\n      .catch((err) => { \r\n        context.notification.show(err.response.data.detail, \"error\")\r\n      })\r\n  };\r\n\r\n  const fetchConversation = async (customer_id) => {\r\n    await axios({\r\n      method: 'GET',\r\n      url: `v1/get_chat_history/${customer_id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth.user.token}`\r\n      }\r\n    })\r\n      .then((res) => setConversation(res.data.messages))\r\n      .catch((err) => context.notification.show(err.response.data.detail, \"error\"))\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    if( !validate() ) return;\r\n    const lead_id = conversation.reverse().find((c) => c.message_incoming === true && c.lead_id)?.lead_id\r\n    if(!lead_id) return;\r\n\r\n    const forms = new FormData();\r\n    \r\n\t\tforms.append('message', message);\r\n    forms.append('sender', auth.user.manager_name);\r\n    forms.append('customer_phone', activeConversation.customer_phone);\r\n    forms.append('lead_id', lead_id);\r\n\r\n    if(rAudio) {\r\n      forms.append('files', rAudio);\r\n    }\r\n    \r\n    if(file) {\r\n      forms.append('files', file);\r\n    }\r\n\r\n    await axios({\r\n      method: \"POST\",\r\n      url: `/v1/send_message`,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        'Authorization': `Bearer ${auth.user.token}`\r\n      },\r\n      data: forms\r\n    })\r\n      .then((res) => {\r\n        const newConversation = [...conversation];\r\n        newConversation.push(res.data.message);\r\n        setConversation(newConversation);\r\n        setMessage('');\r\n        setFile(null);\r\n        setAudio(null);\r\n        setRAudio(null);\r\n      })\r\n      .catch((err) => {\r\n        context.notification.show(err.response.data.detail, \"error\")\r\n      })\r\n  };\r\n\r\n  const validate = () => {\r\n    if(file === null && rAudio === null && message.length === 0) {\r\n      context.notification.show('Пустое сообщение', \"error\")\r\n      return false\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className='flex flex-col sm:flex-row h-[88vh]'>\r\n      <Conversations \r\n        setCurrentPage={setCurrentPage}\r\n        fetchConversation={fetchConversation}\r\n        type={type}\r\n        setType={setType}\r\n        conversations={conversations}\r\n        setConversations={setConversations}\r\n        activeConversation={activeConversation} \r\n        setActiveConversation={setActiveConversation}\r\n        setAudio={setAudio}\r\n      />\r\n      <Conversation\r\n        conversation={conversation}\r\n        setConversation={setConversation}\r\n        fetchConversations={fetchConversations}\r\n        activeConversation={activeConversation}\r\n        message={message}\r\n        setMessage={setMessage}\r\n        file={file}\r\n        setFile={setFile}\r\n        audio={audio}\r\n        setAudio={setAudio}\r\n        setRAudio={setRAudio}\r\n        handleSendMessage={handleSendMessage}\r\n      />\r\n      <ConversationInfo \r\n        activeConversation={activeConversation}\r\n        audio={audio}\r\n        setAudio={setAudio}\r\n        handleSendMessage={handleSendMessage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiddleSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TopSection from './blocks/top_section';\r\nimport MiddleSection from './blocks/middle_section';\r\n\r\nexport default function MainPage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  return (\r\n    <div className='flex flex-col w-full min-h-[100vh]'>\r\n      <TopSection \r\n        search={search} \r\n        setSearch={setSearch}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <MiddleSection \r\n        search={search} \r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  )\r\n}"],"names":["Logo","_jsx","className","children","_jsxs","viewBox","fill","xmlns","d","UserSettings","navigate","useNavigate","auth","useRef","useContext","AuthContext","context","ViewContext","avatar","setAvatar","useState","isSettingOpen","setIsSettingOpen","_Fragment","onClick","colorMode","setTheme","theme","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","src","alt","Animate","type","user","role","Icon","image","color","signout","_ref","search","setSearch","setCurrentPage","SearchInput","value","onChange","text","handleSearch","setType","setConversations","handleChangeType","t","concat","props","conversations","activeConversation","handleChatClick","currentPage","containerRef","raiseConversation","useSocketContext","useEffect","handleScroll","current","scrollHeight","scrollTop","clientHeight","prev","container","addEventListener","removeEventListener","handleRaiseConversation","prevConversations","existIndex","findIndex","c","customer_id","existingConversation","counter","splice","ref","length","map","conversation","i","_conversation$custome","customer_photo","leadvertex_id","customer_good","lastMessageTime","message","setMessage","setLeadVertexId","e","target","placeholder","async","axios","method","url","headers","token","data","sender","manager_name","then","res","new_customer","modal","hide","notification","show","catch","err","response","detail","title","AddModal","size","setActiveConversation","fetchConversation","setAudio","raisedConversations","setRaisedConversations","TopConversations","MiddleConversations","find","raisedConv","newRaisedConversations","filter","FloatingButton","fetchConversations","isFavorite","params","handleAddFavorite","setConversation","messagesEndRef","newMessage","scrollToBottom","handleUpdateNewMessage","customer_phone","chat_phone","newConversation","push","scrollIntoView","behavior","_message$sender_avata","message_incoming","sender_avatar","attachment_url","message_type","message_text","id","ChatAudio","file","setFile","audio","setRAudio","handleSendMessage","fileInputRef","audioChunksRef","audioContextRef","dataArrayRef","analyserRef","mediaRecorderRef","animationRef","mode","setMode","volume","setVolume","isPickedVisible","setIsPickedVisible","startRecording","navigator","mediaDevices","getUserMedia","stream","audioContext","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","mediaRecorder","MediaRecorder","start","ondataavailable","event","onstop","audioBlob","Blob","audioUrl","URL","createObjectURL","close","cancelAnimationFrame","animate","error","console","handleDeleteRecord","getByteFrequencyData","maxVolume","Math","max","requestAnimationFrame","click","style","display","selectedFile","files","name","height","width","cursor","preventDefault","onKeyDown","key","disabled","Picker","previewPosition","onEmojiSelect","native","background","position","overflow","left","transition","stop","controls","ChatTitle","Chat","ChatFooter","_activeConversation$a","rAudio","manager_id","customers_type","page","limit","customers","_conversation$reverse","validate","lead_id","reverse","forms","FormData","append","Conversations","messages","Conversation","ConversationInfo","MainPage","TopSection","MiddleSection"],"sourceRoot":""}